@model IEnumerable<StudentMG.ViewModels.GradeVM>
@using System.Security.Claims
@using System.Web
@{
    var identity = (ClaimsIdentity)User.Identity;
    var maSinhVienClaim = identity.FindFirst("MaSinhVien");
    var maSinhVien = maSinhVienClaim != null ? maSinhVienClaim.Value : "Not Available";
    ViewData["ID"] = maSinhVien;
    ViewData["Title"] = "ShowGrade";
    Layout = "~/Views/Shared/_LayoutStudent.cshtml";
}

<h1>ShowGrade</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<div class="row">
    <div class="col-md-6">
        <form asp-action="ShowGrade" asp-controller="Student">
            <input name="searchString" class="form-control me-1" type="search" placeholder="Search" aria-label="Search"/>
            <button class="btn btn-dark" type="submit">Search by me</button>
        </form>
    </div>
    <div class="col-md-6">
        <a asp-action="ShowGrade" class="text-dark">Back to full list</a>
    </div>
</div>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NoCredits)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Grade)
            </th>
            
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NoCredits)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Grade)
            </td>
            @* <td>
                <a asp-action="Edit" asp-route-id="@item.No">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.No">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.No">Delete</a>
            </td> *@
        </tr>
}
    </tbody>
</table>
